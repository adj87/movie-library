{"version":3,"sources":["pages/Movies/redux.ts","pages/MovieDetail/redux/index.ts","pages/MovieCreate/redux/index.ts","store.ts","components/Body.tsx","components/Header.tsx","pages/Movies/Card.tsx","constants.ts","pages/Movies/index.tsx","pages/MovieDetail/index.tsx","pages/MovieDetail/redux/operations.ts","components/Input.tsx","pages/MovieCreate/index.tsx","pages/MovieCreate/redux/operations.ts","components/AsideMenu.tsx","components/Loading.tsx","pages/Default/index.tsx","i18n/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["moviesSlice","createSlice","name","initialState","list","loading","reducers","setMovies","state","action","payload","setLoading","actions","movieDetailSlice","movie","setMovie","movieCreateSlice","actors","companies","setCompanies","setActors","store","configureStore","reducer","movies","moviesReducer","movieDetail","movieDetailReducer","movieCreate","movieCreateReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Body","children","className","LanguageButton","lang","i18n","isActive","language","onClick","changeLanguage","toUpperCase","Header","text","pathname","useLocation","history","useHistory","useTranslation","t","isBackButton","test","includes","icon","faArrowLeft","faBars","size","goBack","document","body","classList","add","Card","title","style","backgroundImage","poster","backgroundPosition","genre","map","el","API_HOST","Movies","dispatch","push","useEffect","fetch","then","res","json","rowGap","id","faPlusCircle","TitleAndList","MovieDetail","useParams","Promise","all","responses","company","actorsName","a","first_name","last_name","movieWithCompanyAndActors","fetchAll","backgroundSize","imdbRating","duration","alert","faTrash","faEdit","Input","value","label","onChange","type","e","currentTarget","initialFormState","undefined","year","MovieCreate","useState","formState","setFormState","updateForm","useCallback","oldState","onSubmit","preventDefault","JSON","stringify","classNamePrefix","options","isMulti","genres","getOptionValue","opt","getOptionLabel","c","links","href","AsideMenu","location","faTimesCircle","remove","i","linkActive","to","Date","getFullYear","Loading","faVideo","spin","Default","keyTranslation","resources","en","translation","es","App","use","initReactI18next","init","fallbackLng","keySeparator","interpolation","escapeValue","basename","from","exact","path","component","match","isNaN","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6204b42.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Movie } from \"../../interfaces/movie\";\n\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState: { list: [], loading: false } as {\n    list: Movie[];\n    loading: boolean;\n  },\n  reducers: {\n    setMovies: (state, action: PayloadAction<Movie[]>) => {\n      // state = action.payload; // eslint-disable-line\n      state.list = action.payload;\n    },\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      // prettier-ignore\n      state.loading = action.payload; // eslint-disable-line\n    }\n  }\n});\n\nexport const { setMovies, setLoading } = moviesSlice.actions;\n\nexport default moviesSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { MovieWithCompanyAndActorsAsStrings } from \"../../../interfaces/movie\";\n\nconst initialState = {\n  loading: false,\n  movie: null as null | MovieWithCompanyAndActorsAsStrings\n};\n\nconst movieDetailSlice = createSlice({\n  name: \"movieDetail\",\n  initialState: initialState,\n  reducers: {\n    setMovie: (\n      state,\n      action: PayloadAction<MovieWithCompanyAndActorsAsStrings>\n    ) => {\n      state.movie = action.payload; // eslint-disable-line\n    },\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload; // eslint-disable-line\n    }\n  }\n});\n\nexport const { setMovie, setLoading } = movieDetailSlice.actions;\n\nexport default movieDetailSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Actor } from \"../../../interfaces/actor\";\nimport { Company } from \"../../../interfaces/company\";\n\nconst initialState = {\n  loading: false,\n  actors: [] as [] | Actor[],\n  companies: [] as [] | Company[]\n};\n\nconst movieCreateSlice = createSlice({\n  name: \"movieCreate\",\n  initialState: initialState,\n  reducers: {\n    setCompanies: (state, action: PayloadAction<Company[]>) => {\n      state.companies = action.payload; // eslint-disable-line\n    },\n    setActors: (state, action: PayloadAction<Actor[]>) => {\n      state.actors = action.payload; // eslint-disable-line\n    },\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload; // eslint-disable-line\n    }\n  }\n});\n\nexport const { setCompanies, setActors, setLoading } = movieCreateSlice.actions;\n\nexport default movieCreateSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport moviesReducer from \"./pages/Movies/redux\";\nimport movieDetailReducer from \"./pages/MovieDetail/redux\";\nimport movieCreateReducer from \"./pages/MovieCreate/redux\";\n\nexport const store = configureStore({\n  reducer: {\n    movies: moviesReducer,\n    movieDetail: movieDetailReducer,\n    movieCreate: movieCreateReducer\n  }\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>(); // eslint-disable-line\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\n\ninterface BodyProps {\n    children: React.ReactNode\n}\n\nconst Body: React.FC<BodyProps> = ({ children }) => (\n  <div className=\"md:mx-12 lg:mx-16 xl:mx-40 mt-12 xs:mt-32\">\n    {children}\n  </div>\n);\n\nexport default Body;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { i18n } from \"i18next\";\n\ninterface HeaderProps {\n  text?: string;\n}\n\nconst Header: React.FC<HeaderProps> = ({ text }) => {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const { t, i18n } = useTranslation();\n\n  const isBackButton =\n    /movies\\/\\d+/.test(pathname) || pathname.includes(\"movies/new\");\n  return (\n    <div className=\"flex justify-items-center items-center mb-8 sticky top-0 bg-primary z-10\">\n      <FontAwesomeIcon\n        icon={isBackButton ? faArrowLeft : faBars}\n        className=\"cursor-pointer hover:text-secondary transition transform transition-all mr-4\"\n        size=\"2x\"\n        onClick={\n          isBackButton\n            ? history.goBack\n            : () => document.body.classList.add(\"aside-menu-open\")\n        }\n      />\n      <p className=\"font-bold flex-1 xs:text-center text-left text-3xl xs:text-5xl ellipsis-effect\">\n        {t(`${text}`)}\n      </p>\n      <LanguageButton lang={\"es\"} i18n={i18n} />\n      <LanguageButton lang={\"en\"} i18n={i18n} />\n    </div>\n  );\n};\n\nconst LanguageButton = ({ lang, i18n }: { lang: string; i18n: i18n }) => {\n  const isActive =\n    i18n.language === lang ? \"text-secondary font-bold text-xl\" : \"\";\n  return (\n    <span\n      className={`mr-4 cursor-pointer ${isActive}`}\n      onClick={() => i18n.changeLanguage(lang)}\n    >\n      {lang.toUpperCase()}\n    </span>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Movie } from \"../../interfaces/movie\";\n\ninterface CardProps {\n  movie: Movie;\n  onClick: () => void;\n}\n\nconst Card: React.FC<CardProps> = ({ movie, onClick }) => {\n  return (\n    <div>\n      <p className=\"mb-6 ellipsis-effect font-semibold\">{movie.title}</p>\n      <div\n        className=\"h-40 bg-secondary transform hover:scale-110 transition-all rounded-lg cursor-pointer border border-primary-light\"\n        style={{\n          backgroundImage: `url(${movie.poster})`,\n          backgroundPosition: \"center\"\n        }}\n        onClick={onClick}\n      />\n      <div className=\"mt-1 flex flex-row-reverse flex-wrap \">\n        {movie.genre.map((el: string) => (\n          <span\n            key={`genre-tag-${el}`}\n            className=\"px-4 bg-primary-light rounded-lg ml-2 cursor-default text-xs mt-1\"\n          >\n            {`#${el}`}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","// this file should be replace by an env file.\n\nexport const API_HOST =\n  \"https://my-json-server.typicode.com/adj87/movie-library\";\n","import React, { useEffect } from \"react\";\nimport Body from \"../../components/Body\";\nimport Header from \"../../components/Header\";\nimport { setMovies, setLoading } from \"./redux\";\nimport { RootState, useAppDispatch, useAppSelector } from \"../../store\";\nimport { Movie } from \"../../interfaces/movie\";\nimport Card from \"./Card\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory } from \"react-router-dom\";\nimport { API_HOST } from \"../../constants\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Movies: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const movies = useAppSelector((state: RootState) => state.movies.list);\n  const { push } = useHistory();\n  useEffect(() => {\n    dispatch(setLoading(true));\n    fetch(`${API_HOST}/movies`)\n      .then((res) => res.json())\n      .then((movies: Movie[]) => {\n        dispatch(setMovies(movies));\n        dispatch(setLoading(false));\n      });\n  }, []);\n  return (\n    <>\n      <Header text={t(\"screens.movies\")} />\n      <Body>\n        <div\n          className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-12\"\n          style={{ rowGap: \"5rem\" }}\n        >\n          {movies.map((movie: Movie) => (\n            <Card\n              key={movie.id}\n              movie={movie}\n              onClick={() => push(`/movies/${movie.id}`)}\n            />\n          ))}\n        </div>\n      </Body>\n      <FontAwesomeIcon\n        icon={faPlusCircle}\n        className=\"cursor-pointer fixed bottom-6 right-6 text-secondary transition-all hover:text-white hover:scale-110\"\n        size=\"6x\"\n        onClick={() => push(\"/movies/new\")}\n      />\n    </>\n  );\n};\n\nexport default Movies;\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Body from \"../../components/Body\";\nimport Header from \"../../components/Header\";\nimport { RootState, useAppDispatch, useAppSelector } from \"../../store\";\nimport { fetchAll } from \"./redux/operations\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MovieDetail: React.FC<any> = () => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const { id } = useParams<{ id: string }>();\n  const movie = useAppSelector((state: RootState) => state.movieDetail.movie);\n  useEffect(() => {\n    fetchAll(dispatch, id);\n  }, []);\n  return (\n    <>\n      <Header text={movie?.title} />\n      <Body>\n        <div\n          className=\"h-60 bg-secondary rounded-lg border border-primary-light\"\n          style={{\n            backgroundImage: `url(${movie?.poster})`,\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\"\n          }}\n        />\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12 mt-4\">\n          <div className=\"text-center font-bold flex flex-col\">\n            <span className=\"text-grey-400\">{t(\"movie.imdbRating\")}</span>\n            <span className=\"text-2xl\">{movie?.imdbRating}</span>\n          </div>\n          <div className=\"text-center font-bold flex flex-col\">\n            <span className=\"text-grey-400\">{t(\"movie.duration\")}</span>\n            <span className=\"text-2xl\">{`${movie?.duration ?? \"\"} m`}</span>\n          </div>\n          <div\n            className=\"bg-primary-light rounded-lg text-center cursor-pointer\"\n            onClick={() => alert(\"Just faking 😄\")}\n          >\n            {t(\"watch-in\")}\n            <span className=\"text-red text-2xl font-bold\"> NETFLIX</span>\n          </div>\n        </div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12 mt-16\">\n          <TitleAndList list={movie?.actors} title={t(\"movie.actors\")} />\n          <TitleAndList list={[movie?.company]} title={t(\"movie.company\")} />\n          <TitleAndList list={movie?.genre} title={t(\"movie.genre\")} />\n        </div>\n        <div className=\"fixed bottom-4 right-4\">\n          <FontAwesomeIcon\n            icon={faTrash}\n            size=\"3x\"\n            className=\"text-red cursor-pointer\"\n            onClick={() => alert(\"TO DO\")}\n          />\n          <FontAwesomeIcon\n            icon={faEdit}\n            size=\"3x\"\n            className={\"ml-6 text-secondary cursor-pointer\"}\n            onClick={() => alert(\"TO DO\")}\n          />\n        </div>\n      </Body>\n    </>\n  );\n};\n\nconst TitleAndList: React.FC<any> = ({ title, list }) => {\n  return (\n    <div className=\"text-left font-bold flex flex-col\">\n      <span className=\"text-grey-400 border-grey-500 border-b-2 mb-2\">\n        {title}\n      </span>\n      <div className=\"flex flex-col \">\n        {list?.map((el: string | number) => (\n          <p key={`${title}-${el}`} className=\"text-xl\">\n            {el}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetail;\n","// This file is intended for functions dispatching as many actions as desired in a row. These functions will make component files look cleaner\n// This approach comes from redux-duck pattern\n\nimport { setLoading, setMovie } from \".\";\nimport { API_HOST } from \"../../../constants\";\nimport { Actor } from \"../../../interfaces/actor\";\nimport { Company } from \"../../../interfaces/company\";\nimport {\n  Movie,\n  MovieWithCompanyAndActorsAsStrings\n} from \"../../../interfaces/movie\";\n\ntype ApiResponse = [Movie, Company[], Actor[]];\n\nexport const fetchAll: (dispatch: any, id?: string) => void = (\n  dispatch,\n  id\n) => {\n  dispatch(setLoading(true));\n  Promise.all([\n    fetch(`${API_HOST}/movies/${id}`),\n    fetch(`${API_HOST}/companies?movies_like=${id}`),\n    fetch(`${API_HOST}/actors?movies_like=${id}`)\n  ])\n    .then((responses) =>\n      Promise.all(responses.map((res: Response) => res.json()))\n    )\n    .then((res) => {\n      const [movie, companies, actors] = res as ApiResponse;\n      const company = companies[0].name;\n      const actorsName = actors.map(\n        (a: Actor) => `${a.first_name} ${a.last_name}`\n      );\n      const movieWithCompanyAndActors: MovieWithCompanyAndActorsAsStrings = {\n        ...movie,\n        actors: actorsName,\n        company\n      };\n      dispatch(setMovie(movieWithCompanyAndActors));\n      dispatch(setLoading(false));\n    });\n};\n","import React, { HTMLInputTypeAttribute } from \"react\";\n\ninterface InputPros {\n  value: string | number | undefined;\n  label: string;\n  onChange: (name: string, value: string | number) => void;\n  name: string;\n  type?: HTMLInputTypeAttribute;\n}\n\nconst Input: React.FC<InputPros> = ({ value, label, onChange, name, type }) => {\n  return (\n    <div className=\"flex flex-col\">\n      <label className=\"text-grey-200 mb-2\">{label}</label>\n      <input\n        className=\"bg-transparent text-secondary border-grey-500 border-b-2 text-xl\"\n        value={value}\n        name={name}\n        onChange={(e: React.FormEvent<HTMLInputElement>) =>\n          onChange(e.currentTarget.name, e.currentTarget.value)\n        }\n        type={type ?? \"text\"}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Select, { MultiValue, SingleValue } from \"react-select\";\n\nimport Body from \"../../components/Body\";\nimport Header from \"../../components/Header\";\nimport Input from \"../../components/Input\";\nimport { Actor } from \"../../interfaces/actor\";\nimport { Company } from \"../../interfaces/company\";\nimport { RootState, useAppDispatch, useAppSelector } from \"../../store\";\nimport { fetchAll } from \"./redux/operations\";\n\nconst initialFormState = {\n  id: undefined,\n  title: undefined,\n  poster: undefined,\n  genre: undefined,\n  year: undefined,\n  duration: undefined,\n  imdbRating: undefined,\n  actors: undefined,\n  company: undefined\n};\n\nconst MovieCreate: React.FC<any> = () => {\n  const [formState, setFormState] = useState(initialFormState);\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const [actors, companies] = useAppSelector(({ movieCreate }: RootState) => [\n    movieCreate.actors,\n    movieCreate.companies\n  ]);\n  const updateForm = useCallback((name, value) => {\n    setFormState((oldState) => ({ ...oldState, [name]: value }));\n  }, []);\n  useEffect(() => {\n    fetchAll(dispatch);\n  }, []);\n  return (\n    <>\n      <Header text={t(\"screens.movieCreate\")} />\n      <Body>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            alert(`The values are ${JSON.stringify(formState, null, 2)}`);\n            alert(\"TODO: Validation and send data to backend\");\n          }}\n        >\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 mb-4\">\n            <Input\n              value={formState.title}\n              name={\"title\"}\n              label={t(\"movie.title\")}\n              onChange={updateForm}\n            />\n            <Input\n              value={formState.poster}\n              name={\"poster\"}\n              label={t(\"movie.poster\")}\n              onChange={updateForm}\n            />\n            <div>\n              <label className=\"text-grey-200 mb-4\">{t(\"movie.genre\")}</label>\n              <Select\n                classNamePrefix=\"react-select\"\n                options={[\n                  { value: \"Fiction\", label: \"Fiction\" },\n                  { value: \"Drama\", label: \"Drama\" }\n                ]}\n                isMulti\n                value={formState.genre}\n                name=\"genre\"\n                onChange={(genres: any, { name }) => {\n                  updateForm(name, genres);\n                }}\n              />\n            </div>\n\n            <div>\n              <label className=\"text-grey-200 mb-4\">{t(\"movie.actors\")}</label>\n              <Select\n                classNamePrefix=\"react-select\"\n                options={actors}\n                isMulti\n                getOptionValue={(opt: any) => opt.id}\n                value={formState.actors}\n                name=\"actors\"\n                onChange={(actors: MultiValue<Actor>, { name }) => {\n                  updateForm(name, actors);\n                }}\n                getOptionLabel={(el: Actor) =>\n                  `${el.first_name} ${el.last_name}`\n                }\n              />\n            </div>\n            <div>\n              <label className=\"text-grey-200 mb-4\">{\"Company\"}</label>\n              <Select\n                classNamePrefix=\"react-select\"\n                options={companies}\n                getOptionValue={(opt: any) => opt.id}\n                value={formState.company}\n                name=\"company\"\n                onChange={(c: SingleValue<Company>, { name }) => {\n                  updateForm(name, c);\n                }}\n                getOptionLabel={(c: Company) => c.name}\n              />\n            </div>\n\n            <Input\n              value={formState.year}\n              name={\"year\"}\n              type=\"number\"\n              label={t(\"movie.year\")}\n              onChange={updateForm}\n            />\n            <Input\n              value={formState.duration}\n              name={\"duration\"}\n              type=\"number\"\n              label={t(\"movie.duration\")}\n              onChange={updateForm}\n            />\n            <Input\n              value={formState.imdbRating}\n              name={\"imdbRating\"}\n              type=\"number\"\n              label={t(\"movie.imdbRating\")}\n              onChange={updateForm}\n            />\n          </div>\n          <div className=\"my-16 text-center\">\n            <button\n              type=\"submit\"\n              className=\"px-16 py-2 text-xl bg-secondary rounded-md w-full sm:w-auto\"\n            >\n              Enviar\n            </button>\n          </div>\n        </form>\n      </Body>\n    </>\n  );\n};\n\nexport default MovieCreate;\n","// This file is intended for functions dispatching as many actions as desired in a row. These functions will make component files look cleaner\n// This approach comes from redux-duck pattern\n\nimport { setActors, setCompanies, setLoading } from \".\";\nimport { API_HOST } from \"../../../constants\";\nimport { Actor } from \"../../../interfaces/actor\";\nimport { Company } from \"../../../interfaces/company\";\n\ntype ApiResponse = [Actor[], Company[]];\n\nexport const fetchAll: (dispatch: any) => void = (dispatch) => {\n  dispatch(setLoading(true));\n  Promise.all([fetch(`${API_HOST}/actors`), fetch(`${API_HOST}/companies`)])\n    .then((responses) =>\n      Promise.all(responses.map((res: Response) => res.json()))\n    )\n    .then((res) => {\n      const [actors, companies] = res as ApiResponse;\n      dispatch(setActors(actors));\n      dispatch(setCompanies(companies));\n      dispatch(setLoading(false));\n    });\n};\n","import { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst AsideMenu: React.FC = () => {\n  const location = useLocation();\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"w-full h-0 fixed top-0 left-0 bg-secondary z-20 bg-opacity-90 layer transition-all duration-500\" />\n      <div className=\"w-0 h-full bg-primary aside-menu fixed z-30 top-0 left-0 transition-all duration-500 overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex justify-between align-center items-center\">\n          <span className=\"font-bold text-3xl\">Movie Library</span>\n          <FontAwesomeIcon\n            icon={faTimesCircle}\n            className=\"text-white cursor-pointer\"\n            onClick={() => document.body.classList.remove(\"aside-menu-open\")}\n          />\n        </div>\n        {/* Bodylinks */}\n        <div className=\"flex flex-col mt-20\">\n          {links.map((el, i: number) => {\n            const linkActive = location.pathname.includes(el.href)\n              ? \"text-secondary  font-bold\"\n              : \"\";\n            return (\n              <Link\n                key={`link ${i}`}\n                to={el.href}\n                className={`py-2 text-grey-600 text-xl ${linkActive} hover:text-white transition-all duration-500`}\n                onClick={() =>\n                  document.body.classList.remove(\"aside-menu-open\")\n                }\n              >\n                {t(`screens.${el.title}`)}\n              </Link>\n            );\n          })}\n        </div>\n        {/* Footer */}\n        <div className=\"bottom-0 absolute pb-8 font-extralight\">\n          <p>{`© ${new Date().getFullYear()} ${t(\"all-rights-reserved\")}`} </p>\n          <p>\n            {t(\"by\")} <span className=\"text-grey-400\">mr_jaurewi</span>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst links = [\n  { href: \"/movies\", title: \"movies\" },\n  { href: \"/actors\", title: \"actors\" },\n  { href: \"/companies\", title: \"companies\" }\n];\n\nexport default AsideMenu;\n","import { faVideo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { RootState, useAppSelector } from \"../store\";\n\nconst Loading: React.FC = () => {\n  const loading = useAppSelector(\n    (state: RootState) =>\n      state.movieDetail.loading ||\n      state.movies.loading ||\n      state.movieCreate.loading\n  );\n  return (\n    <div\n      className={`w-full h-full fixed top-0 left-0 bg-primary z-40 bg-opacity-80 flex justify-center items-center ${\n        loading ? \"block\" : \"hidden\"\n      }`}\n    >\n      <FontAwesomeIcon icon={faVideo} spin={true} size={\"8x\"} className=\"fas\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport Body from \"../../components/Body\";\nimport Header from \"../../components/Header\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface DefaultProps {\n  keyTranslation: string;\n}\n\nconst Default: React.FC<DefaultProps> = ({ keyTranslation }) => {\n  const { t } = useTranslation();\n  const { push } = useHistory();\n\n  return (\n    <>\n      <Header text={t(keyTranslation)} />\n      <Body>\n        <p className=\"text-2xl text-grey-600 text-center\">\n          {\"This page does not exist yet. Please go to \"}\n          <span\n            className=\"text-secondary cursor-pointer font-bold\"\n            onClick={() => push(\"/movies\")}\n          >\n            {t(\"screens.movies\")}\n          </span>\n        </p>\n      </Body>\n    </>\n  );\n};\n\nexport default Default;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport enJSON from \"./en.json\";\nimport esJSON from \"./es.json\";\n\nconst resources = {\n  en: {\n    translation: enJSON\n  },\n  es: {\n    translation: esJSON\n  }\n};\n\nexport default i18n.use(initReactI18next).init({\n  fallbackLng: \"en\",\n  resources,\n  keySeparator: \".\", // we do not use keys in form messages.welcome\n  interpolation: {\n    escapeValue: false // react already safes from xss\n  }\n});\n","import React from \"react\";\nimport { BrowserRouter, Redirect, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport Movies from \"./pages/Movies\";\nimport MovieDetail from \"./pages/MovieDetail\";\nimport MovieCreate from \"./pages/MovieCreate\";\nimport AsideMenu from \"./components/AsideMenu\";\nimport Loading from \"./components/Loading\";\nimport Default from \"./pages/Default\";\n\nimport \"./i18n\";\n\nconst App: React.FC = () => (\n  <Provider store={store}>\n    <Loading />\n    <BrowserRouter basename=\"/movie-library\">\n      <AsideMenu />\n      <Redirect to=\"/movies\" from=\"/\" exact />\n      <Route\n        path=\"/\"\n        component={() => <Default keyTranslation={\"screens.home\"} />}\n        exact\n      />\n      <Route path=\"/movies\" component={() => <Movies />} exact />\n      <Route\n        path=\"/movies/:id\"\n        component={({ match }: any) => {\n          if (isNaN(match?.params?.id)) return null;\n          return <MovieDetail />;\n        }}\n        exact\n      />\n      <Route path=\"/movies/new\" component={() => <MovieCreate />} exact />\n      <Route\n        path=\"/actors\"\n        component={() => <Default keyTranslation={\"screens.actors\"} />}\n        exact\n      />\n      <Route\n        path=\"/companies\"\n        component={() => <Default keyTranslation={\"screens.companies\"} />}\n        exact\n      />\n    </BrowserRouter>\n  </Provider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}